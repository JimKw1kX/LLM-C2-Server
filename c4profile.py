# Form implementation generated from reading ui file 'c4profile.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

#!/usr/bin/python3

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import *
from PyQt6.QtGui import QIcon, QPixmap
import os, json
from c2front5 import Ui_MainWindow
from PyQt6.QtGui import QAction
DATA_FILE = 'listener.json'
import threading
import subprocess
# from badgertab import badger_session
import sys,os
from teamserver import TS

class Ui_c4profile(object):
        def setupUi(self, c4profile):
            super().__init__()
            self.c4profile = c4profile
            
            
            self.cmd = "ifconfig ens33  | grep 'inet ' | awk '{print $2}'"
            self.ens33 = str(os.system(self.cmd))

            self.c4profile.setObjectName("c4profile")
            self.c4profile.setFixedSize(1302, 664)
            self.centralwidget = QtWidgets.QWidget(c4profile)
            self.c4profile.setCentralWidget(self.centralwidget)

            self.main_layout = QtWidgets.QVBoxLayout(self.centralwidget)

            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(c4profile.sizePolicy().hasHeightForWidth())
            self.c4profile.setSizePolicy(sizePolicy)
            self.centralwidget = QtWidgets.QWidget(parent=c4profile)
            self.centralwidget.setObjectName("centralwidget")
            self.Watchlist = QtWidgets.QTabWidget(parent=self.centralwidget)
            self.Watchlist.setGeometry(QtCore.QRect(0, 0, 1321, 651))
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.Watchlist.sizePolicy().hasHeightForWidth())
            self.Watchlist.setSizePolicy(sizePolicy)
            self.Watchlist.setObjectName("Watchlist")
            self.Listeners = QtWidgets.QWidget()
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.Listeners.sizePolicy().hasHeightForWidth())
            self.Listeners.setSizePolicy(sizePolicy)
            self.Listeners.setObjectName("Listeners")
            self.gridLayoutWidget = QtWidgets.QWidget(parent=self.Listeners)
            self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 200, 2, 2))
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.gridLayoutWidget.sizePolicy().hasHeightForWidth())
            self.gridLayoutWidget.setSizePolicy(sizePolicy)
            self.gridLayoutWidget.setObjectName("gridLayoutWidget")
            self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
            self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetNoConstraint)
            self.gridLayout.setContentsMargins(0, 0, 0, 0)
            self.gridLayout.setObjectName("gridLayout")
            self.lineEdit = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit.setGeometry(QtCore.QRect(10, 40, 161, 21))
            self.lineEdit.setReadOnly(True)
            self.lineEdit.setObjectName("lineEdit")
            self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_2.setGeometry(QtCore.QRect(10, 80, 161, 21))
            self.lineEdit_2.setReadOnly(True)
            self.lineEdit_2.setObjectName("lineEdit_2")
            self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_3.setGeometry(QtCore.QRect(10, 120, 161, 21))
            self.lineEdit_3.setReadOnly(True)
            self.lineEdit_3.setObjectName("lineEdit_3")
            self.lineEdit_4 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_4.setGeometry(QtCore.QRect(10, 150, 161, 21))
            self.lineEdit_4.setReadOnly(True)
            self.lineEdit_4.setObjectName("lineEdit_4")
            self.lineEdit_5 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_5.setGeometry(QtCore.QRect(10, 180, 161, 21))
            self.lineEdit_5.setReadOnly(True)
            self.lineEdit_5.setObjectName("lineEdit_5")
            self.lineEdit_6 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_6.setGeometry(QtCore.QRect(10, 220, 161, 21))
            self.lineEdit_6.setReadOnly(True)
            self.lineEdit_6.setObjectName("lineEdit_6")
            self.lineEdit_7 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_7.setGeometry(QtCore.QRect(10, 250, 161, 21))
            self.lineEdit_7.setReadOnly(True)
            self.lineEdit_7.setObjectName("lineEdit_7")
            self.lineEdit_8 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_8.setGeometry(QtCore.QRect(10, 280, 161, 31))
            self.lineEdit_8.setReadOnly(True)
            self.lineEdit_8.setObjectName("lineEdit_8")
            self.comboBox = QtWidgets.QComboBox(parent=self.Listeners)
            self.comboBox.setGeometry(QtCore.QRect(220, 80, 871, 31))
            self.comboBox.setObjectName("comboBox")
            self.comboBox.addItem("")
            self.comboBox.addItem("")
            self.lineEdit_9 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_9.setGeometry(QtCore.QRect(220, 120, 871, 25))
            self.lineEdit_9.setObjectName("lineEdit_9")
            self.lineEdit_10 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_10.setGeometry(QtCore.QRect(220, 40, 871, 25))
            self.lineEdit_10.setObjectName("lineEdit_10")
            self.lineEdit_11 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_11.setGeometry(QtCore.QRect(220, 150, 871, 25))
            self.lineEdit_11.setObjectName("lineEdit_11")
            self.lineEdit_12 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_12.setGeometry(QtCore.QRect(220, 180, 871, 25))
            self.lineEdit_12.setObjectName("lineEdit_12")
            self.comboBox_2 = QtWidgets.QComboBox(parent=self.Listeners)
            self.comboBox_2.setGeometry(QtCore.QRect(220, 240, 871, 31))
            self.comboBox_2.setObjectName("comboBox_2")
            self.comboBox_2.addItem("")
            self.comboBox_2.addItem("")
            self.comboBox_2.addItem("")
            self.comboBox_2.addItem("")
            self.comboBox_2.setItemText(3, "")
            self.lineEdit_13 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_13.setGeometry(QtCore.QRect(220, 210, 871, 25))
            self.lineEdit_13.setObjectName("lineEdit_13")
            self.lineEdit_14 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_14.setGeometry(QtCore.QRect(220, 280, 871, 25))
            self.lineEdit_14.setObjectName("lineEdit_14")
            self.lineEdit_15 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_15.setGeometry(QtCore.QRect(10, 320, 161, 31))
            self.lineEdit_15.setReadOnly(True)
            self.lineEdit_15.setObjectName("lineEdit_15")
            self.comboBox_3 = QtWidgets.QComboBox(parent=self.Listeners)
            self.comboBox_3.setGeometry(QtCore.QRect(220, 320, 871, 31))
            self.comboBox_3.setObjectName("comboBox_3")
            self.comboBox_3.addItem("")
            self.radioButton = QtWidgets.QRadioButton(parent=self.Listeners)
            self.radioButton.setGeometry(QtCore.QRect(10, 420, 161, 23))
            self.radioButton.setObjectName("radioButton")
            self.radioButton_2 = QtWidgets.QRadioButton(parent=self.Listeners)
            self.radioButton_2.setGeometry(QtCore.QRect(170, 420, 161, 23))
            self.radioButton_2.setObjectName("radioButton_2")
            self.lineEdit_16 = QtWidgets.QLineEdit(parent=self.Listeners)
            self.lineEdit_16.setGeometry(QtCore.QRect(10, 450, 1061, 25))
            self.lineEdit_16.setText("")
            self.lineEdit_16.setObjectName("lineEdit_16")
            self.checkBox = QtWidgets.QCheckBox(parent=self.Listeners)
            self.checkBox.setGeometry(QtCore.QRect(10, 490, 571, 23))
            self.checkBox.setObjectName("checkBox")
            self.spinBox = QtWidgets.QSpinBox(parent=self.Listeners)
            self.spinBox.setGeometry(QtCore.QRect(1030, 500, 44, 26))
            self.spinBox.setObjectName("spinBox")
            self.checkBox_2 = QtWidgets.QCheckBox(parent=self.Listeners)
            self.checkBox_2.setGeometry(QtCore.QRect(10, 530, 571, 23))
            self.checkBox_2.setObjectName("checkBox_2")
            self.Watchlist.addTab(self.Listeners, "")
            self.pushButton = QtWidgets.QPushButton(parent=self.Listeners)
            self.pushButton.setGeometry(QtCore.QRect(530, 550, 89, 25))
            self.pushButton.setObjectName("pushButton")
     
            self.tab_2 = QtWidgets.QWidget()
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.tab_2.sizePolicy().hasHeightForWidth())
            self.tab_2.setSizePolicy(sizePolicy)
            self.tab_2.setObjectName("tab_2")
            self.Watchlist.addTab(self.tab_2, "")
            self.tab_3 = QtWidgets.QWidget()
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.tab_3.sizePolicy().hasHeightForWidth())
            self.tab_3.setSizePolicy(sizePolicy)
            self.tab_3.setObjectName("tab_3")
            self.Watchlist.addTab(self.tab_3, "")
            self.tab_4 = QtWidgets.QWidget()
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.tab_4.sizePolicy().hasHeightForWidth())
            self.tab_4.setSizePolicy(sizePolicy)
            self.tab_4.setObjectName("tab_4")
            self.Watchlist.addTab(self.tab_4, "")
            self.tab_5 = QtWidgets.QWidget()
            sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
            sizePolicy.setHorizontalStretch(0)
            sizePolicy.setVerticalStretch(0)
            sizePolicy.setHeightForWidth(self.tab_5.sizePolicy().hasHeightForWidth())
            self.tab_5.setSizePolicy(sizePolicy)
            self.tab_5.setObjectName("tab_5")
            self.treeWidget = QtWidgets.QTreeWidget(parent=self.tab_5)
            self.treeWidget.setGeometry(QtCore.QRect(0, 0, 0, 200))
            self.treeWidget.setObjectName("treeWidget")
            self.Watchlist.addTab(self.tab_5, "")
            c4profile.setCentralWidget(self.centralwidget)
            self.statusbar = QtWidgets.QStatusBar(parent=c4profile)
            self.statusbar.setObjectName("statusbar")
            c4profile.setStatusBar(self.statusbar)
            self.menubar = QtWidgets.QMenuBar(parent=c4profile)
            self.menubar.setGeometry(QtCore.QRect(0, 0, 1302, 22))
            self.menubar.setObjectName("menubar")
            c4profile.setMenuBar(self.menubar)

            

            # self.button = QtWidgets.QPushButton("Save_test")
            # self.button.setFixedSize(100, 40)
            # self.button.clicked.connect(self.on_button_click)

            # # Layout
            # layout = QtWidgets.QVBoxLayout()
            # layout.addWidget(self.button)
            # self.button.clicked.connect(self.on_button_click)

            self.retranslateUi(self.c4profile)
            self.Watchlist.setCurrentIndex(0)
            QtCore.QMetaObject.connectSlotsByName(self.c4profile)

        # def close_window(self):
        #     def __init__(self):
        #         super().__init__()
        #         self.ui = Ui_c4profile()
        #         self.ui.setupUi(self)
        #     # close_action = QAction('Close', self)
        #     # close_action.triggered.connect(self.close)
        #         self.pushButton.clicked.connect(self.close)
            

        def retranslateUi(self, c4profile):
            _translate = QtCore.QCoreApplication.translate
            c4profile.setWindowTitle(_translate("c4profile", "C4 Profile"))
            self.lineEdit.setText(_translate("c4profile", "*Listener name"))
            self.lineEdit_2.setText(_translate("c4profile", "*Listener blind Host"))
            self.lineEdit_3.setText(_translate("c4profile", "*Port"))
            self.lineEdit_4.setText(_translate("c4profile", "*UserAgent"))
            self.lineEdit_5.setText(_translate("c4profile", "*URI(s)"))
            self.lineEdit_6.setText(_translate("c4profile", "*Redirector"))
            self.lineEdit_7.setText(_translate("c4profile", "OS"))
            self.lineEdit_8.setText(_translate("c4profile", "Proxy"))
            self.comboBox.setItemText(0, _translate("c4profile", "127.0.0.1"))
            self.comboBox.setItemText(1, _translate("c4profile", "192.168.245.129"))
            self.lineEdit_9.setText(_translate("c4profile", "8080"))
            self.lineEdit_10.setText(_translate("c4profile", ""))
            self.lineEdit_11.setText(_translate("c4profile", ""))
            self.lineEdit_12.setText(_translate("c4profile", ""))
            self.comboBox_2.setItemText(0, _translate("c4profile", "Windows"))
            self.comboBox_2.setItemText(1, _translate("c4profile", "Linux"))
            self.comboBox_2.setItemText(2, _translate("c4profile", "Mac"))
            self.lineEdit_13.setText(_translate("c4profile", ""))
            self.lineEdit_14.setText(_translate("c4profile", ""))
            self.lineEdit_15.setText(_translate("c4profile", "Sleep Mask"))
            self.comboBox_3.setItemText(0, _translate("c4profile", "APC"))
            self.radioButton.setText(_translate("c4profile", "Common Auth"))
            self.radioButton_2.setText(_translate("c4profile", "One Time Auth"))
            self.checkBox.setText(_translate("c4profile", " Create one time key"))
            self.checkBox_2.setText(_translate("c4profile", "  Die if C2 is inaccessible?"))
            self.pushButton.setText(_translate("c4profile", "Save"))
            # self.pushButton2.setText(_translate("c4profile", "Close"))
            self.Watchlist.setTabText(self.Watchlist.indexOf(self.Listeners), _translate("c4profile", "Listeners Profile"))
            self.Watchlist.setTabText(self.Watchlist.indexOf(self.tab_2), _translate("c4profile", "Malleable Profile"))
            self.Watchlist.setTabText(self.Watchlist.indexOf(self.tab_3), _translate("c4profile", "Request/Response Headers"))
            self.Watchlist.setTabText(self.Watchlist.indexOf(self.tab_4), _translate("c4profile", "Help"))
            self.treeWidget.headerItem().setText(0, _translate("c4profile", "Name"))
            self.treeWidget.headerItem().setText(1, _translate("c4profile", "New Column"))
            self.treeWidget.headerItem().setText(2, _translate("c4profile", "Host"))
            self.treeWidget.headerItem().setText(3, _translate("c4profile", "Port"))
            self.treeWidget.headerItem().setText(4, _translate("c4profile", "SSL"))
            self.treeWidget.headerItem().setText(5, _translate("c4profile", "Type"))
            self.treeWidget.headerItem().setText(6, _translate("c4profile", "URI(s)"))
            self.Watchlist.setTabText(self.Watchlist.indexOf(self.tab_5), _translate("c4profile", "RL"))
            # self.translate_button = QtWidgets.QPushButton("Save", self)

            # self.button = QtWidgets.QPushButton("Save_test")
            # self.pushButton.setFixedSize(100, 40)
              
            self.apply_dark_theme(c4profile)
            QtCore.QMetaObject.connectSlotsByName(c4profile)

            self.pushButton.clicked.connect(self.on_button_click)
       


        def save_output_tojson(self):
            data = {
                
            }

            data['*Port'] = self.lineEdit_9.text()
            ip = self.comboBox.currentText()
            if ip:
                data['*Listener blind Host'] = ip

            with open(DATA_FILE, 'w') as f:
            
                json.dump(data, f, indent=4)
            
            print(f'listener json data has being saved to {DATA_FILE}')

        def read_json(self):
            try:
                with open(DATA_FILE, 'r') as f:
                    data =  json.load(f)
            except (FileExistsError, json.JSONDecodeError):
                return {}
            
            self.port = data['*Port']
            self.IP = data['*Listener blind Host']
            print(self.port)
            print(self.IP)
            elements_profile = ["http-listener", "YES", self.IP, self.port, "YES" , "NULL" ,"openai/index.html/1231233123213123131231233123.exe" ]

            self.listener = Ui_MainWindow().ListenerTab()
            self.elements = Ui_MainWindow().ListenerTab().elements
            self.elements = elements_profile
            self.listenertab = self.listener.add_listener(self.elements)

           
        def nc(self):
    
            ts = TS()
            ts_out = ts.ts()
            thread = threading.Thread(target=ts_out)
            thread.start()
        

        def on_button_click(self):
            
            print("C4 Profile Button clicked!!!!!!!!!!!!!!!!!!!!!!!")
            self.save_output_tojson()
            self.read_json()
            ts = threading.Thread(target=self.nc())
            ts.start()
            # self.nc(self)
            self.c4profile.close()
            # Ui_MainWindow.close
      
        def inputbox(self):
            msg = QMessageBox()
            # msg.setIcon(QMessageBox.information)
            msg.setText('LLM agent C2 Project')
            msg.setStyleSheet("color: white; font-size: 16px;")
            msg.setWindowTitle('LLM C2')
            pixmap = QPixmap('images/h12.png')
            msg.setIconPixmap(pixmap)
            # msg.setStandardButtons(QMessageBox.Ok)
            msg.exec()

        def apply_dark_theme(self, c4profile):
                
                # Dark theme style
                dark_style = """
                    QMainWindow {
                        background-color: 002611;
                        color: #ffffff;
                    }
                    QWidget {
                        background-color: #1B1B1B;
                        color: #ffffff;
                    }
                    QTabWidget::pane {
                        border: 1px solid #2e2e2e;
                    }
                    QTabBar::tab {
                        background-color: #3c3c3c;
                        padding: 5px;
                        border: 1px solid #2e2e2e;
                    }
                    QTabBar::tab:selected {
                        background-color: #505050;
                    }
                    QTreeWidget {
                        background-color: #2e2e2e;
                        border: none;
                        color: #ffffff;
                    }
                    QGroupBox {
                        border: 1px solid #3c3c3c;
                        margin-top: 6px;
                        color: #ffffff;
                    }
                    QGroupBox::title {
                        subcontrol-origin: margin;
                        subcontrol-position: top left;
                        padding: 0 3px;
                    }
                    QMenuBar {
                        background-color: #2e2e2e;
                        color: #ffffff;
                    }
                    QMenuBar::item:selected {
                        background-color: #3c3c3c;
                    }
                    QStatusBar {
                        background-color: #2e2e2e;
                        color: #ffffff;
                    }
                """
                c4profile.setStyleSheet(dark_style)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    c4profile = QtWidgets.QMainWindow()
    ui = Ui_c4profile()
    ui.setupUi(c4profile)
    c4profile.show()
 
    
    sys.exit(app.exec())
